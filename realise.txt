1 - Controlo de banco de dados 
	- Criar metodo que insere dados na db, (tabela, dados, quantas vezes precisa inserir)
	- Criar metodo que retira dados da base de dados, (tabela, limite)
	- Criar metodo que deleta 1 ou mais dados da bd, (tabela, id ou ids)
	- Criar metodo que atualiza 1 mou mais dados da bd, (tabela, id ou ids)
	- Criar metodo de verificacao de dados 
	
2 - Funcionamento da página TICKET
	- Controlo de todos os tickets que estiverem ainda ativos
	- O tempo que outros tickets foram desativados depois do serviço
	- Controlo de todos os tickets 

3 - Dados do utilizador
	- Tipo de acesso
	- Nome Completo
	- Nome de utilizador
	- Senha

4- Tabela Consumidores
	- id 					-> int
	- nome 					-> varchar
	- bi 					-> varchar
	- idade 				-> date
	- id_marca_carro 		-> int
	- id_modelo_carro 		-> int
	- cor_carro 			-> varchar 
	- cor_carro_exadecimal 	-> varchar 
	- matricula_carro 		-> varchar
	- tempo_espaco 			-> datetime
	- valor 				-> float
	- data_hora_entrada 	-> timestamp
	- data_hora_saida 		-> timestamp
	- reservado 			-> boolean

change this file to #idea

Percorrer um array da requisição Post para verificar 
os dados que estão vazios e agrupar eles dentro de um array e mandar de volta dizendo que são campos obrigatórios  





Pegar trabalho que faz pesquisa


SELECT 
	*,modelos.id as id_modelo
FROM 
	marcas_carros as marcas 
LEFT JOIN 
	modelos_carros as modelos ON modelos.id_marca = marcas.id 			
WHERE
	modelos.id is NULL 	
ORDER BY marcas.nome, modelos.nome asc LIMIT 10000


** Adicionar chat cliente e operador **

*Funcionamento*
- Poder enviar mensagem
- Ordenar mensagem por quem tiver um ou mais cartão multicaixa
- O operador pode atribuir a mensagem pra ele


** Histórico de tickets **

*Funcionamento dos filtros*
- por nome do consumidor 
- Por data
- Por BI
- Por Marca e modelo do veículo
- Matrícula
- Data (Hoje, Ontem, 3 dias, 1 semana, 1 mês e 1 ano)